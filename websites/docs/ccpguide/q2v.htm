<html>

<head>
	<title>Q2 Variant Loader</title>
	<style><!--
		a:link{text-decoration:none;color:#FF0000}
		a:visited{text-decoration:none;color:#FF0000}
		a:active{text-decoration:none;color:#FF0000}
		a:hover{text-decoration:underline;color:#FF0000}
		td.end{border-top:1 solid #999999}
	--></style>
</head>

<body leftmargin=10 topmargin=5 bottommargin=10 background=greyfade.jpg bgcolor=#555555 text=#CCCCCC link=#FF0000 alink=#FF0000 vlink=#FF0000>
	<table border=0 cellspacing=0 cellpadding=5>
		<tr><td><font face=Arial,Helvetica size=5><b>Q2 Variant Loader</b></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>I wrote Q2V because I never get to play some of the interesting variations on <a href=http://action.telefragged.com>Action Quake</a> developed since the A-Team released the source, there aren't enough servers around to support even a few of these as permanent installations. The only way to configure them on a server is to exit the game, back up the original game module (<font color=#0099CC>gamex86.dll</font> on a Windows system) and copy in the variant game library. Q2V allows the game engine to be changed (at the console or by player voting) without closing Quake. It's also handy on a LAN or for switching between the single player variants available.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Q2V works by replacing the game engine and then loading the desired module indirectly for each new game, effectively sitting between <font color=#0099CC>quake2.exe</font> and the renamed <font color=#0099CC>gamex86.dll</font>. For the most part its existance is entirely transparent and most game calls are linked directly to the loaded game engine. Where Q2V hooks one of these calls to implement variant switching and other functions I've taken care to keep the code as tight as possible. For any intents and purposes there's zero overhead involved in running Q2V.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Although written with AQ in mind there's nothing Action specific hard-coded within Q2V and it could as easily be applied to any Q2 mod or baseq2 itself. Wherever this file indicates that <i>action</i> is a default, the value used is in fact the same as the <font color=#CC9900>gamedir</font> cvar (i.e. baseq2). Presently it's for Windows only, the code supports Linux but I haven't got around to working out how to build an .so with my compiler.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=3 color=#FFFFFF><b>Installation</b></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>The grand plan is to create a single AQ installation which supports all the various versions as one seamless mod. Ultimately this might include Espionage, Gangsters, Dirty, Fireteams, Heroes, 3-Teams, Arena, PG-BUND's Edition, Knife AQ, Mr.Brian's CTB, Tournament Edition, Standard AQ1.52 and possibly even Terror Q2 (I realise this is a mod in its own right but it may well run as an AQ variant also). This UberAQ2 will already include configs and map rotations for each variant and mode (DM, TP, Team by Skin DM etc.) and be ready to run 'out of the zip' once maps are added. Also an updated HUD and the best weapon skins and sounds I can find for Action.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>In truth none of the above is actually likely to happen so I've created this guide for anyone that wants to work up their own installation for Action or any other Q2 game.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* Create a "variants" sub-directory within your game folder (i.e. c:\quake2\action\variants\).</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* Move your existing <font color=#0099CC>gamex86.dll</font> to this new folder and rename it <font color=#0099CC><i>gamedir</i>.dll</font> (i.e. c:\quake2\action\variants\action.dll).</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* Copy the Q2V <font color=#0099CC>gamex86.dll</font> into your game folder (i.e. c:\quake2\action\gamex86.dll).</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>That's it, without setting any of the variables described below Q2V will by default load the <font color=#0099CC><i>gamedir</i>.dll</font> from the variants folder. When you next run the game the only change you'll notice is the Q2V banner in the console during the load.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=3 color=#FFFFFF><b>Loading a Variant by Module Name</b></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Now add additional renamed <font color=#0099CC>gamex86.dll</font>'s to the variants folder, start a game, and switch between them with the server command:<br><br><font color=#99CC00>sv variant</font> {module} [{map}]<br><br>- where {module} is the filename of the renamed game library without extension (i.e. \variants\ctb.dll = ctb) and {map} is the map to load for the new game (optional, if not specified Q2V will reload the current map). Any clients already connected to the server will be automatically re-connected to the new game.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Before restarting the game Q2V will first check in the variants folder for a config named for the {module} parameter (i.e. \variants\ctb.cfg) and <font color=#99CC00>exec</font> this if it exists. If it doesn't exist it'll look for a config named for the <font color=#CC9900>gamedir</font> (i.e. \variants\action.cfg) and run this instead as a default. Use these variant configs to reset <font color=#CC9900>dmflags</font>, <font color=#CC9900>hostname</font> (so that the current variant is visible in GameSpy and the like), <font color=#CC9900>ininame</font> (this AQ cvar points to the map and team skins list) etc. Do not include a <font color=#99CC00>map</font> command in any of these configs as this will conflict with Q2V's map load and hang Quake.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>To specify the variant without first starting a game use:<br><br><font color=#99CC00>set</font> <font color=#CC9900>gamevar</font> {module}<br><br>- and {module} will be loaded next map. In this case the variant config will not be executed so if using this in an autoexec.cfg to start a server you should add something like:</font></td></tr>
		<tr><td><font face="Courier New, Courier" size=2>set gamevar ctb<br>exec variants\ctb.cfg<br>map ctbcity</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>- which is in fact all Q2V does when you use the <font color=#99CC00>variant</font> command.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=3 color=#FFFFFF><b>Configuring the VarList</b></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>The <font color=#99CC00>variant</font> server command is a quick way of loading any game engine without setting up anything before hand. More involved setups (which allow different configurations based around a single game library) and voting are implemented using a <font color=#0099CC>varlist.ini</font> which resides in the game folder (i.e. c:\quake2\action\varlist.ini).</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Each line in this file lists a variant config to run, map to load and descriptive title separated by a ":" for example:</font></td></tr>
		<tr><td><font face="Courier New, Courier" size=2>action:teamdepo:Teamplay<br>tpffon:teamdepo:Teamplay (Friendly Fire)<br>dm_new:matrix2:Deathmatch<br>dm_old:locknload:Classic Deathmatch (Old Maps)<br>mrbctb:ctbcity:Capture the Briefcase (Mr.Brian's)<br>aqdtte::AQDT Tournament Edition</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>The first value corresponds to the {module} parameter used with the <font color=#99CC00>variant</font> command and defines the filename of the config to run (i.e. \variants\mrbctb.cfg) and default library to load (i.e. \variants\mrbctb.dll). You can specify a different filename for the game engine by setting the cvar <font color=#CC9900>gamelib</font> within the variant config allowing you to have multiple variants (or modes of play) configured around a single module. In the example above the <font color=#0099CC>tpffon.cfg</font>, <font color=#0099CC>dm_old.cfg</font> and <font color=#0099CC>dm_new.cfg</font> would all include:<br><br><font color=#99CC00>set</font> <font color=#CC9900>gamelib</font> "action"<br><br>- and differ mainly in the <font color=#CC9900>dmflags</font> set, for example:</td></tr>
		<tr><td><font face="Courier New, Courier" size=2>set hostname "Action Q2V Classic Deathmatch"<br>set ininame "variants\dm_old.ini"<br>set dmflags "512"<br>set teamplay "0"<br>set gamelib "action"<br></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>In general if you set a variable within one variant config you should set or reset it any every config. The exception to this is <font color=#CC9900>gamelib</font> which Q2V always clears before executing a variant and only needs to be explicitly set if the game module filename differs from that of the variant config. Setting <font color=#CC9900>gamelib</font> within the default <font color=#0099CC><i>gamedir</i>.cfg</font> (i.e. action.cfg) will cause problems if this is executed as a default by the <font color=#99CC00>variant</font> command (above).</td></tr>
		<tr><td><font face=Arial,Helvetica size=2>The second value in each line of the <font color=#0099CC>varlist.ini</font> corresponds to the {map} parameter of the <font color=#99CC00>variant</font> command and is again optional, if not specified Q2V will reload the current map. In the case of Action use the first map in the list specified by <font color=#CC9900>ininame</font>.</td></tr>
		<tr><td><font face=Arial,Helvetica size=2>The client command:<br><br><font color=#99CC00>varlist</font><br><br>- will print a numbered list of these variants to the console using the text entered in the third value. The server command:<br><br><font color=#99CC00>sv varexec</font> {index}<br><br>- will switch to the variant {index} as numbered in the list displayed by <font color=#99CC00>varlist</font>.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>The <font color=#0099CC>varlist.ini</font> file is fairly relaxed about formatting, blank lines and white space at the beginning and end of a line are fine but it doesn't cope with spaces either side of the ":"'s within the line. Comment out a whole line by adding a ";" at the beginning. Up to 32 variants are allowed, the entire file should be no more than 4096 bytes (4KB) in size.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=3 color=#FFFFFF><b>Variant Voting</b></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Two variables to set here, <font color=#CC9900>varvotereq</font> is the point over which the variant will be switched by player voting as a percentage of connected clients and entered as a fraction (i.e. set varvotereq "0.75"), default is '0.5'. Additionally <font color=#CC9900>varvotemin</font> specifies the minimum number of actual votes required, default is '0' (voting disabled), '1' allows any player to switch variants if they're alone on the server. I'd recommend:</font></td></tr>
		<tr><td><font face="Courier New, Courier" size=2>set varvotereq "0.5" \\More than half the players.<br>set varvotemin "2" \\Not less than two votes for.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>The client command:<br><br><font color=#99CC00>varvote</font> {index}<br><br>- will vote for the variant {index} as numbered in the list displayed by <font color=#99CC00>varlist</font>. An {index} of '0' will clear that client's vote.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>The server's <font color=#CC9900>maxclients</font> should also be set to 32 or less, the 33rd client connecting will almost certainly crash Q2V.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=3 color=#FFFFFF><b>Individual Player Skins in Teamplay</b></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Nothing to do with variants but I thought this would be a neat thing to add. Q2V can be set to overide the skin assignments made by the game in TP and allow each player to use a custom skin subject to server controlled provisos. To enable set <font color=#CC9900>clientskin</font> to 1 (default is 0), no point in setting this for DM.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Q2V will look at the client's <font color=#CC9900>skin</font> setting (model/skin) and if it finds the specified image on the server for that player's team model it'll use this instead. If for instance my client is set to "male/defunkt" and my team's model/skin is "sas/sasurban" but a <font color=#0099CC>defunkt.pcx</font> also exists for the sas model I'll become "sas/defunkt", if the skin doesn't exist I'll remain "sas/sasurban".</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>It's really intended for clan matches but with a little care on the part of the server-op could be extended to public TP without risk of abuse. The important thing is to make sure that all skins allowed (by virtue of their existing in the server's model folder) are substantially based on the default for that team to ensure the two teams remain distinguishable.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>In the example above, the server-op should remove all skins from \players\sas other than the default <font color=#0099CC>sasurban.pcx</font> and those player skins vetted as being basically similar and approved for use. This will prevent a player from using a darker skin or one that's harder to tell apart from the opposing team's skin. If desired the removed skins can be compiled into a pak file (where Q2V won't detect them) so that the server remains a completely useable client.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Clan skins are usually placed in the folder for the model on which they're based however this isn't neccesarily a good idea if individual player skins are enabled. Firstly these skins would then be available in any public game with <font color=#CC9900>clientskin</font> set and using this model and are unlikely to be suitably similar to the base skin in use. Worse, a player could use the opposing team's skin if both are based on the same model. A better plan is to implement each set of clan skins as a separate model by creating individual folders in the \players directory and duplicating the model and vwep files (*.md2).</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>In any case the server and client should both have model and skin downloads turned on so that the client can suck down any files it doesn't already have. Responsible admins should also ensure that the inset (i.e. defunkt_i.pcx) exists for each skin, there's nothing worse than having your console flooded with missing file messages should you encounter the same skin in DM.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>All of which may seem like a lot of shagging around but being able to see who is where during a game (where each player has a name/number/symbol on their skin) is awesome for co-operative play and partnering. Some day I might convince my clan to send me photos so I can put their real faces on our skins.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=3 color=#FFFFFF><b>Known Problems</b></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* Works with <a href=http://hosted.barrysworld.com/zarjazz/>BW-Admin</a> but not <a href=http://www.planetquake.com/q2admin>Q2Admin</a> (for now).</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* Works with the 3-Teams variant on FreaK's LAN (Win98) but not on the <a href=http://www.quakenz.co.nz>QuakeNZ</a> servers (WinNT & BW-Admin).</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=3 color=#FFFFFF><b>Possible Improvements</b></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Q2V already does more than I'd originally intended but I've thought of a few enhancements. The great thing about the way it works is that any new functions are available to all variants:</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* A Linux build since most public servers run this. Can anyone tell me how to build an .so with MSVC6?</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* Implementing the %L location parsing in messaging. A couple of the AQ variants already do this but it'd be pretty cool to have the same function available in all of them.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* Optionally forcing a sniper's <font color=#CC9900>cl_run</font> to 0 while zoomed in. Messing with the game itself isn't a can of worms I wanted to open but melee sniping has always shitted me a bit because it's not very real-world.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* Adding a 'squad' coms system allowing players to create and join private channels that define the destination of their <font color=#99CC00>say_team</font> messages and also play custom wav files (located in a sound sub-directory named for the channel) to each member of their 'squad'. Similar to <a href=http://www.planetquake.com/knitters/ck/>Conference Kill</a> but implemented server side rather than with a client proxy.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* Adding menus to replace the <font color=#99CC00>varlist</font> and <font color=#99CC00>varvote</font> console commands.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* Adding a <font color=#99CC00>varinfo</font> command to display a text file with a little information about the loaded variant.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* Doing away with static limits on the number of players, number of variants and size of <font color=#0099CC>varlist.ini</font>.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* All of Q2V's variables are 'latched' meaning that changes won't take effect until a new game is started (or variant loaded), this should be changed for some settings, particularly voting.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>* Adding <font color=#99CC00>maplist</font>, <font color=#99CC00>mapvote</font> and (maybe) <font color=#99CC00>mapinfo</font> commands and associated <font color=#0099CC>maplist.ini</font>. Already available in some variants and admin plug-ins but it'd be good to have this work in the same way as the variants and it'd be easy to do.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=3 color=#FFFFFF><b>Downloads</b></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2><a href=http://www.ionwerks.net/defunkt/action/q2v.zip>Q2V</a> (34.9KB)- The <font color=#0099CC>gamex86.dll</font> and this guide only.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2><a href=http://www.ionwerks.net/defunkt/action/aq2v.zip>AQ2V</a> (524KB) - Q2V plus a few example cfg's, ini's and dll's for AQ1.52, Mr.Brian's CTB and Heroes. To be unzipped to the /quake2/action folder, you'll need to have already installed the client files for Mr.Brian's.</font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=3 color=#FFFFFF><b>Credits</b></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Q2 Variant Loader v0.7 (7 June 2000) by deFUNKt.<br>Mail: <a href=mailto:defunkt@hotmail.com>defunkt@hotmail.com</a><br>Site: <a href=http://www.ionwerks.co.nz/defunkt>http://www.ionwerks.net/defunkt</a></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Based on Zarjazz' PLUG-IN for Quake2 v1.01 (25 Feb 1999).<br>Mail: <a href=mailto:zarjazz@barrysworld.com>zarjazz@barrysworld.com</a><br>Site: <a href=http://www.barrysworld.com/zarjazz>http://www.barrysworld.com/zarjazz</a></font></td></tr>
		<tr><td><font face=Arial,Helvetica size=2>Thanks to <a href=mailto:freak_mdm_@hotmail.com>FreaK</a> master and molester of all things Action for testing and his work on configs, Sgt.Rock for running Q2V on the <a href=http://www.quakenz.co.nz>QuakeNZ</a> servers while I've been writing it and <a href=http://telefragged.com/warroom>The War Room</a> for file space.</font></td></tr>
	</table>
<BR>
<BR>
<A HREF="index.html">Back</A> to the documentation listing...<BR>
<BR>
</BODY>

</HTML>